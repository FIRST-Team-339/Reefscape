package us.kilroyrobotics;

import static edu.wpi.first.units.Units.Degrees;
import static edu.wpi.first.units.Units.MetersPerSecond;

import edu.wpi.first.units.measure.Angle;
import edu.wpi.first.units.measure.LinearVelocity;

public final class Constants {
    /**
     * Constants used for interfacing with drive subsystems and mechanisms that aren't autogenerated
     * from {@link us.kilroyrobotics.generated.TunerConstants TunerConstants}
     */
    public static final class DriveConstants {
        public static final LinearVelocity kLowDriveSpeed = MetersPerSecond.of(0.5);
    }

    /** Constants used for interfacing with the elevator subsystem */
    public static final class ElevatorConstants {
        /** The motor ID of the Spark Max associated with the left motor for the elevator */
        public static final int kLeftMotorId = 41;

        /** The motor ID of the Spark Max associated with the right motor for the elevator */
        public static final int kRightMotorId = 42;
    }

    /** Constants used for interfacing with the Coral Intake and Wrist subsystems */
    public static final class CoralMechanismConstants {
        /** The motor ID of the Spark Max associated with the wrist motor for the coral mechanism */
        public static final int kWristMotorId = 43;

        /** The motor ID of the Spark Max associated with the motor for the coral intake */
        public static final int kWheelMotorId = 44;

        /* Wrist Configurations */
        /** The angle that the wrist will be at the start of the match */
        public static final Angle kStartingAngle = Degrees.of(0);

        /** The angle that the wrist will be when intaking a coral */
        public static final Angle kIntakingAngle = Degrees.of(45);

        /** The angle that the wrist will be when scoring at L4 */
        public static final Angle kScoringHighLevel = Degrees.of(180);

        /** The angle that the wrist will be when scoring at L2-L3 */
        public static final Angle kScoringMidLevel = Degrees.of(110);

        /** The angle that the wrist will be when scoring at L1 */
        public static final Angle kScoringLowLevel = Degrees.of(160);
    }
}
